/*_______Canvas_______*/
.canvasContainer {
  height: 97vh;
  width: 98vw;
}

.react-flow__attribution {
  display: none !important;
}

/*_______Open Menu_______*/
.openMenuButton {
  position: fixed;
  top: 0.5rem;
  left: 0.5rem;
  width: 2rem;
  height: 2rem;
  z-index: 500;
  background-color: #ffffff;
  border: none;
  box-shadow: #c6c6c6 1px 1px 5px;
  transition: 0.15s ease-out;
  border-radius: 0.33rem;
  user-select: none;
}

.openMenuButtonIcon {
  width: 1.3rem;
  height: 1.3rem;
  user-select: none;

}

.openMenuButton:hover {
  transition: 0.15s ease-out;
  background-color: #dadada;
}

.openMenuButton:active {
  transition: 0.05s ease-out;
  background-color: #e3e3e3;
  box-shadow: none;
}

/*_______Open Settings_______*/
.openSettingsButton {
  z-index: 501;
  position: fixed;
  top: 0.5rem;
  left: 2.5rem;
  width: 2rem;
  height: 2rem;
  margin-left: 0.33rem;
  background-color: #ffffff;
  border: none;
  box-shadow: #c6c6c6 1px 1px 5px;
  transition: 0.15s ease-out;
  border-radius: 0.33rem;
  user-select: none;
}

.openSettingsButton > img {
  transition: 0.15s ease-in-out;
  transform: rotate(0deg);
}

.openSettingsButton:hover {
  transition: 0.15s ease-out;
  background-color: #dadada;
}

.openSettingsButton:hover > img {
  transition: 0.15s ease-in-out;
  transform: rotate(-60deg);
}

.openSettingsButton:active {
  transition: 0.05s ease-out;
  background-color: #e3e3e3;
  box-shadow: none;
}

.openSettingsButtonIcon {
  width: 1.3rem;
  height: 1.3rem;
  user-select: none;
}

/*_______Panel_______*/
.panel {
  /*width: 15.33rem;*/
  max-height: 70vh;
  z-index: 200;
  position: fixed;
  top: 2.5rem;
  left: -17.33rem;
  margin: 0.33rem 0 0 0.33rem;
  border-radius: 0.66rem;
  background-color: #ffffff;
  box-shadow: #c6c6c6 1px 1px 5px;
  transition: 0.3s ease-in-out;
  user-select: none;
}

.panel.open {
  transition: 0.3s ease-out;
  position: fixed;
  left: 0;
}

.panelInnerButton {
  background-color: #ffffff;
  border: none;
  box-shadow: #c6c6c6 1px 1px 5px;
  transition: 0.15s ease-out;
  border-radius: 0.5rem;
  width: 3.33rem;
  height: 3.33rem;
  /*margin: 0.05rem;*/
}

.panelInnerButton:hover {
  transition: 0.15s ease-out;
  background-color: #dadada;
}

.panelInnerButton:active {
  transition: 0.05s ease-out;
  background-color: #dbedff;
  box-shadow: none;
}

.panelTitle {
  margin-top: 0.66rem;
  text-align: center;
  font-size: 1.32rem;
}

.buttonPicture {
  width: 2.66rem;
  align-items: center;
  vertical-align: middle;
}

.buttonText {
  vertical-align: bottom;
  font-size: 10px;
  text-align: center;
  width: 100%;
  font-family: Montserrat, serif;
  font-weight: 600;

}

/*_______ToolBar_______*/
.toolbar {
  user-select: none;
  display: flex;
  width: 16.66rem;
  border-radius: 0.66rem;
  position: fixed;
  bottom: 1.32rem;
  right: 1.32rem;
  z-index: 1000;
  padding: 0.466rem 0;
  background: #ffffff;
  box-shadow: #c6c6c6 1px 1px 5px;
  transition: transform 0.3s;
}

.toolbarButton {
  width: 2rem;
  height: 2rem;
  margin-left: 0.66rem;
  background-color: #ffffff;
  border: none;
  box-shadow: #c6c6c6 1px 1px 5px;
  transition: 0.15s ease-out;
  border-radius: 0.33rem;
}

.toolbarButton:hover {
  transition: 0.15s ease-out;
  background-color: #dadada;
}

.toolbarButton:active {
  transition: 0.05s ease-out;
  background-color: #dbedff;
  box-shadow: none;
}

.toolbarButtonIcon {
  width: 1.2rem;
  height: 1.2rem;
}

.toolbarButton.active {
  transition: 0.05s ease-out;
  background-color: #dbedff;
  box-shadow: none;
}

/*______Menu list______*/
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.gates {
  padding: 0;
  animation: fadeIn 0.3s ease-in-out;
  text-align: center;
}

.gates-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(3.33rem, 1rem));
  gap: 0.5rem;
  padding: 0.5rem 0;
}

.menu-item.active .gates-grid {
  max-height: 500px; /* Enough for content */
}

.arrow {
  height: 0.75rem;
  color: black;
  transition: transform 0.3s;
  cursor: pointer;
  user-select: none;
  margin: 0.25rem;
}

.menu-item.active .arrow {
  transform: rotate(90deg);
}

/*.menu-items {*/
/*    list-style-type: decimal;*/
/*    list-style-position: inside;*/
/*    margin: 0;*/
/*    padding: 0;*/
/*}*/

/*.menu-items li {*/
/*    margin: 0.5rem 0;*/
/*}*/

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/*______Backdrop______*/
.backdrop {
  position: fixed;
  z-index: 2000;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  background-color: rgba(0, 0, 0, 0);
  transition: width 0s, height 0s, background-color 0.15s ease, backdrop-filter 0.15s ease;
}

.backdrop.cover {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3); /* Полупрозрачный черный */
  backdrop-filter: blur(4px); /* Размытие фона (опционально) */
  transition: width 0s, height 0s, background-color 0.15s ease, backdrop-filter 0.15s ease;
}

/*______Settings______*/
.settingsMenu {
  position: fixed;
  width: 0;
  height: 0;
  top: 0;
  left: -100%;
  z-index: 2001;
  opacity: 0;
  /*left: 20%;*/
  background-color: #ffffff;
  box-shadow: #c6c6c6 1px 1px 5px;
  border-radius: 0.66rem;
  transition: width 1s 0.15s, height 1s 0.15s, background-color 0.15s ease-in-out, backdrop-filter 0.15s ease-in-out, opacity 0.15s ease-in-out;

}

.settingsMenu.showed {
  position: fixed;
  opacity: 1;
  width: 60%;
  height: 80%;
  top: 10%;
  left: 20%;
  transition: width 0s, height 0s, background-color 0.3s ease-in-out, backdrop-filter 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

.settingsMenuTitle {
  text-align: center;
  font-weight: bold;
  font-size: 1.5rem;
  margin: 1.5rem 0 0 0;
  user-select: none;
}

/*______DragAndDrop______*/
.dndnode {
  padding: 8px;
  border: 1px solid #1a192b;
  border-radius: 4px;
  cursor: move;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
}

.dndnode img {
  width: 50px;
  height: auto;
}

/* Ensure handles are visible over images */
.react-flow__handle {
  z-index: 10;
}

/*короче надо будет потом сделать так чтобы в зависимости от инструмента у нас был разный курсор, когда мы наведены на наше поле*/
/*cursor: pointer;*/
